<?php

namespace AppBundle\Repository;

/**
 * StatRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StatRepository extends \Doctrine\ORM\EntityRepository
{
	//Recupere le classement de l utilisateur avec l id $userID
	public function getUserRank($userId){
		$result = $this->getUsersRank();

		for($i=0;$i<count($result);$i++){
			if($result[$i]['userId'] == $userId)
				return $i+1;
		}
		//TO DO A vÃ©rifier
		return null;
	}
	//Recupere le classement des utilisateur dans l ordre decroissant, de celui qui a le plus de kill a celui qui en a le moins
	public function getUsersRank(){
		$query = $this->getEntityManager()->createQueryBuilder()
		->select('SUM(s.statNbKill) as nbkill, u.userId, u.userLogin')
		->from('AppBundle:Stat','s')
		->innerJoin('s.user','u')
		->groupBy('u.userId')
		->orderBy('nbkill','DESC')
		;

		return $query->getQuery()->getResult();
	}
	//Recupere les statistiques et leurs objects associes de l utilisateur avec l id $userId 
	public function getUserStatsWithObjects($userId){
		$query = $this->createQueryBuilder('s')
		->innerJoin('s.object', 'wea')
		->addSelect('wea')
		->innerJoin('s.user','u')
		->where('s.user = :id')
		->setParameter('id',$userId)
		;

		return $query->getQuery()->getResult();
	}
}

?>